@model ProgrammersBlog.Entities.Dtos.Logs.LogListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Log Kayıtları";
}
<!-- Bootstrap Icons CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="container-fluid">
    <nav aria-label="breadcrumb" class="breadcrumb-container">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-area="Admin" asp-controller="Home" asp-action="Index" class="d-flex align-items-center">
                    <i class="bi bi-house-door-fill me-2"></i>
                    <span>Admin</span>
                </a>
            </li>
            <li class="breadcrumb-item active d-flex align-items-center" aria-current="page">
                <i class="bi bi-journal-text me-2"></i>
                <span>Log Kayıtları</span>
            </li>
        </ol>
    </nav>

    <!-- Main Card -->
    <div class="card shadow-lg border-0">
        <div class="card-header bg-gradient-primary text-white py-3 d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0 fw-semibold">
                <i class="fas fa-clipboard-list me-2"></i>Log Kayıtları
            </h5>
            <div class="d-flex gap-2">
                <button type="button" id="btnRefresh" class="btn btn-light btn-sm text-primary shadow-sm">
                    <i class="fas fa-sync-alt me-1"></i> Yenile
                </button>
                <button type="button" id="btnDeleteAll" class="btn btn-light btn-sm text-danger shadow-sm">
                    <i class="fas fa-trash-alt me-1"></i> Tümünü Sil
                </button>
            </div>
        </div>

        <div class="card-body p-0">
            <!-- Filtreleme -->
            <div class="card mb-4 border-0 shadow-sm rounded-3 mx-3 mt-3">
                <div class="card-header bg-light py-3">
                    <h6 class="mb-0 fw-medium"><i class="fas fa-filter me-2 text-primary"></i>Filtreleme Seçenekleri</h6>
                </div>
                <div class="card-body pt-4">
                    <form asp-controller="Log" asp-action="Index" method="get" class="row g-4" id="filterForm">
                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label fw-medium text-secondary mb-2">Log Seviyesi</label>
                            <select name="level" class="form-select shadow-sm border-2 py-2">
                                <option value="">Tümü</option>
                                <option value="Info" selected="@(Model.Level == "Info")">Bilgi</option>
                                <option value="Warn" selected="@(Model.Level == "Warn")">Uyarı</option>
                                <option value="Error" selected="@(Model.Level == "Error")">Hata</option>
                                <option value="Fatal" selected="@(Model.Level == "Fatal")">Kritik</option>
                                <option value="Debug" selected="@(Model.Level == "Debug")">Debug</option>
                            </select>
                        </div>

                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label fw-medium text-secondary mb-2">Tarih Aralığı</label>
                            <div class="input-group">
                                <input type="date" name="startDate" class="form-control border-end-0 shadow-sm py-2"
                                       value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" placeholder="Başlangıç">
                                <span class="input-group-text bg-white border-start-0"><i class="far fa-calendar-alt text-muted"></i></span>
                                <input type="date" name="endDate" class="form-control border-start-0 shadow-sm py-2"
                                       value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" placeholder="Bitiş">
                            </div>
                        </div>

                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label fw-medium text-secondary mb-2">Kullanıcı</label>
                            <div class="input-group shadow-sm">
                                <span class="input-group-text bg-white border-end-0"><i class="fas fa-user text-muted"></i></span>
                                <input type="text" name="userName" class="form-control border-start-0 py-2"
                                       placeholder="Kullanıcı adı..." value="@Model.UserName">
                            </div>
                        </div>

                        <div class="col-12 col-md-6 col-lg-3 d-flex align-items-end">
                            <div class="d-flex w-100 gap-2">
                                <button type="reset" class="btn btn-outline-secondary flex-grow-1 py-2">
                                    <i class="fas fa-undo me-1"></i> Temizle
                                </button>
                                <button type="submit" class="btn btn-primary shadow-sm flex-grow-1 py-2">
                                    <i class="fas fa-filter me-1"></i> Uygula
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Tablo -->
            <div class="table-responsive rounded-3 mx-3 mb-3">
                @if (Model.Logs != null && Model.Logs.Any())
                {
                    <table class="table table-hover table-striped align-middle mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th style="width:5%">#</th>
                                <th style="width:15%">Tarih</th>
                                <th style="width:10%">Seviye</th>
                                <th style="width:15%">Kullanıcı</th>
                                <th style="width:15%">Controller/Action</th>
                                <th style="width:20%">URL</th>
                                <th style="width:10%">IP</th>
                                <th style="width:10%" class="text-center">İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in Model.Logs)
                            {
                                <tr name="@log.Id" class="transition-all">
                                    <td class="fw-medium">@log.Id</td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            <span class="fw-medium">@log.Logged.ToString("dd.MM.yyyy")</span>
                                            <small class="text-muted">@log.Logged.ToString("HH:mm:ss")</small>
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            var badgeClass = "bg-info";
                                            var iconClass = "fa-info-circle";
                                            if (log.Level == "Error" || log.Level == "Fatal")
                                            {
                                                badgeClass = "bg-danger";
                                                iconClass = "fa-exclamation-circle";
                                            }
                                            else if (log.Level == "Warn")
                                            {
                                                badgeClass = "bg-warning text-dark";
                                                iconClass = "fa-exclamation-triangle";
                                            }
                                            else if (log.Level == "Debug")
                                            {
                                                badgeClass = "bg-secondary";
                                                iconClass = "fa-bug";
                                            }
                                        }
                                        <span class="badge @badgeClass rounded-pill p-2 d-inline-flex align-items-center">
                                            <i class="fas @iconClass me-2 fs-6"></i>
                                            <span class="fw-medium">@log.Level</span>
                                        </span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(log.UserName))
                                        {
                                            <div class="badge bg-light text-dark rounded-pill p-2 d-inline-flex align-items-center">
                                                <i class="fas fa-user me-2"></i>
                                                <span class="text-truncate" style="max-width: 120px">@log.UserName</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="badge bg-light text-muted rounded-pill p-2">
                                                <i class="fas fa-user-secret me-2"></i>Anonim
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="badge bg-primary rounded-pill p-2 d-inline-flex align-items-center">
                                            <i class="fas fa-code me-2"></i>
                                            <span>@log.Controller/@log.Action</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="badge @(log.RequestMethod == "GET" ? "bg-success" : "bg-warning text-dark") me-2">
                                                @log.RequestMethod
                                            </span>
                                            <small class="text-truncate" style="max-width: 150px" title="@log.RequestPath">
                                                @log.RequestPath
                                            </small>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="badge bg-dark rounded-pill p-2 d-inline-flex align-items-center">
                                            <i class="fas fa-network-wired me-2"></i>
                                            <span>@log.ClientIp</span>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex gap-2 justify-content-center">
                                            <a asp-area="Admin" asp-controller="Log" asp-action="Detail"
                                               asp-route-logId="@log.Id"
                                               class="btn btn-sm btn-outline-primary rounded-circle shadow-sm transition-all">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-danger rounded-circle shadow-sm transition-all btn-delete"
                                                    data-id="@log.Id" title="Sil">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="text-center p-5 bg-light rounded-3">
                        <i class="fas fa-database fa-4x text-muted mb-4 opacity-75"></i>
                        <h4 class="text-muted fw-medium mb-3">Kayıt Bulunamadı</h4>
                        <p class="text-muted mb-4">Filtre kriterlerinize uygun log kaydı bulunamadı.</p>
                        <a href="@Url.Action("Index", "Log")" class="btn btn-primary px-4 py-2 shadow-sm">
                            <i class="fas fa-sync-alt me-2"></i> Filtreyi Temizle
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Sayfalama -->
        @if (Model.TotalCount > Model.PageSize)
        {
            <div class="card-footer bg-light d-flex flex-wrap justify-content-between align-items-center py-3 px-4">
                <div class="text-muted mb-2 mb-md-0">
                    Toplam <span class="fw-semibold">@Model.TotalCount</span> kayıttan
                    <span class="fw-semibold">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span>-<span class="fw-semibold">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)</span> arası gösteriliyor
                </div>

                <nav aria-label="Sayfalama">
                    <ul class="pagination pagination-sm mb-0">
                        @if (Model.ShowPrevious)
                        {
                            <li class="page-item">
                                <a class="page-link shadow-sm" href="@Url.Action("Index", new {
                                    page = Model.CurrentPage - 1,
                                    pageSize = Model.PageSize,
                                    level = Model.Level,
                                    startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
                                    endDate = Model.EndDate?.ToString("yyyy-MM-dd"),
                                    userName = Model.UserName
                                })">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link shadow-sm" href="@Url.Action("Index", new {
                                    page = i,
                                    pageSize = Model.PageSize,
                                    level = Model.Level,
                                    startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
                                    endDate = Model.EndDate?.ToString("yyyy-MM-dd"),
                                    userName = Model.UserName
                                })">@i</a>
                            </li>
                        }

                        @if (Model.ShowNext)
                        {
                            <li class="page-item">
                                <a class="page-link shadow-sm" href="@Url.Action("Index", new {
                                    page = Model.CurrentPage + 1,
                                    pageSize = Model.PageSize,
                                    level = Model.Level,
                                    startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
                                    endDate = Model.EndDate?.ToString("yyyy-MM-dd"),
                                    userName = Model.UserName
                                })">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        /* Breadcrumb Container - Dokunulmadı */
        .breadcrumb-container {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            padding: 1rem 2rem;
            background-color: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            width: 100%;
            margin-bottom: 1.5rem;
            gap: 0.75rem;
        }

        /* Breadcrumb - Dokunulmadı */
        .breadcrumb {
            display: flex;
            align-items: center;
            font-size: 1rem;
            font-weight: 500;
            color: #6c757d;
            gap: 0.5rem;
            width: 100%;
        }

        /* Breadcrumb Item - Dokunulmadı */
        .breadcrumb-item {
            display: flex;
            align-items: center;
            color: #6c757d;
            transition: color 0.3s ease;
        }

            /* Breadcrumb Item Link - Dokunulmadı */
            .breadcrumb-item a {
                color: #6c757d;
                font-size: 1rem;
                text-decoration: none;
                transition: color 0.3s ease, transform 0.2s ease;
                display: flex;
                align-items: center;
            }

                .breadcrumb-item a:hover {
                    color: #007bff;
                    transform: translateY(-2px);
                }

            /* Breadcrumb Separator - Dokunulmadı */
            .breadcrumb-item + .breadcrumb-item::before {
                content: '›';
                margin: 0 0.5rem;
                color: #adb5bd;
            }

            /* Active Breadcrumb Item - Dokunulmadı */
            .breadcrumb-item.active {
                color: #007bff;
                font-weight: 600;
            }

            /* Icon Inside Breadcrumb Item - Dokunulmadı */
            .breadcrumb-item i {
                margin-right: 0.25rem;
                color: #6c757d;
                transition: color 0.3s ease;
            }

            /* Icon Hover Effect - Dokunulmadı */
            .breadcrumb-item a:hover i {
                color: #007bff;
            }

        /* Yeni Stiller */
        .bg-gradient-primary {
            background: linear-gradient(135deg, #3a7bd5 0%, #00d2ff 100%);
        }

        .card {
            border-radius: 12px;
            overflow: hidden;
        }

        .table-dark {
            background: #343a40;
        }

            .table-dark th {
                border-bottom: none;
                font-weight: 500;
                text-transform: uppercase;
                font-size: 0.75rem;
                letter-spacing: 0.5px;
            }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.02);
        }

        .table-hover tbody tr:hover {
            background-color: rgba(58, 123, 213, 0.05) !important;
        }

        .badge.rounded-pill {
            padding: 0.35em 0.65em;
            font-weight: 500;
        }

        .btn-outline-primary.rounded-circle,
        .btn-outline-danger.rounded-circle {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

        .text-truncate {
            max-width: 150px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: inline-block;
        }

        .pagination .page-item.active .page-link {
            background-color: #3a7bd5;
            border-color: #3a7bd5;
        }

        .pagination .page-link {
            color: #3a7bd5;
        }

        /* Filtre kartı stilleri */
        .card-header.bg-light {
            background-color: #f8f9fa !important;
            border-bottom: 1px solid #eee;
        }

        /* Sayfalama aktif buton */
        .page-item.active .page-link {
            background-color: #3a7bd5;
            border-color: #3a7bd5;
        }

            .transition-all {
                transition: all 0.2s ease-in-out;
            }

            .table-hover tbody tr:hover {
                transform: translateX(4px);
                box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            }

            .badge {
                transition: transform 0.2s, box-shadow 0.2s;
            }

                .badge:hover {
                    transform: translateY(-1px);
                    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
                }

            .btn-outline-primary, .btn-outline-danger {
                transition: all 0.2s ease;
            }

                .btn-outline-primary:hover {
                    background: rgba(58, 123, 213, 0.1);
                    border-color: #3a7bd5;
                }

                .btn-outline-danger:hover {
                    background: rgba(220, 53, 69, 0.1);
                    border-color: #dc3545;
                }

            .form-control, .form-select {
                transition: border-color 0.2s, box-shadow 0.2s;
            }

                .form-control:focus, .form-select:focus {
                    border-color: #3a7bd5;
                    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.1);
                }

            .card-header {
                border-bottom: none;
            }

            .pagination .page-link {
                min-width: 38px;
                text-align: center;
            }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Yenile butonu
            $('#btnRefresh').click(function () {
                window.location.reload();
            });

            // Filtreleri sıfırla butonu
            $('#btnResetFilters').click(function () {
                $('#filterForm')[0].reset();
                $('#filterForm').submit();
            });

            // Tekil log kaydı silme işlevi
            $('.btn-delete').click(function () {
                const id = $(this).data('id');
                const row = $(this).closest('tr');

                Swal.fire({
                    title: 'Silmek istediğinize emin misiniz?',
                    text: "Bu log kaydı kalıcı olarak silinecektir!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, sil!',
                    cancelButtonText: 'Hayır, vazgeç!',
                    customClass: {
                        confirmButton: 'btn btn-primary me-2',
                        cancelButton: 'btn btn-outline-secondary'
                    },
                    buttonsStyling: false
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            data: { logId: id },
                            url: '@Url.Action("Delete", "Log")',
                            success: function (response) {
                                const result = jQuery.parseJSON(response);
                                if (result.ResultStatus === 0) {
                                    Swal.fire({
                                        title: 'Silindi!',
                                        text: 'Log kaydı başarıyla silindi.',
                                        icon: 'success',
                                        confirmButtonText: 'Tamam',
                                        customClass: {
                                            confirmButton: 'btn btn-success'
                                        },
                                        buttonsStyling: false
                                    }).then(() => {
                                        row.fadeOut(300, function () {
                                            $(this).remove();
                                            // Silme işleminden sonra sayfayı yenile
                                            window.location.reload();
                                        });
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Hata Oluştu!',
                                        text: result.Message,
                                        confirmButtonText: 'Tamam',
                                        customClass: {
                                            confirmButton: 'btn btn-danger'
                                        },
                                        buttonsStyling: false
                                    });
                                }
                            },
                            error: function (err) {
                                console.log(err);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Hata Oluştu!',
                                    text: 'Beklenmeyen bir hata oluştu.',
                                    confirmButtonText: 'Tamam',
                                    customClass: {
                                        confirmButton: 'btn btn-danger'
                                    },
                                    buttonsStyling: false
                                });
                            }
                        });
                    }
                });
            });

            // "Tümünü Sil" butonu için işlev
            $('#btnDeleteAll').click(function () {
                Swal.fire({
                    title: 'Tüm log kayıtlarını silmek istediğinize emin misiniz?',
                    text: "Bu işlem geri alınamaz! Tüm log kayıtları kalıcı olarak silinecektir.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, tümünü sil!',
                    cancelButtonText: 'Hayır, vazgeç!',
                    customClass: {
                        confirmButton: 'btn btn-danger me-2',
                        cancelButton: 'btn btn-outline-secondary'
                    },
                    buttonsStyling: false
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            url: '@Url.Action("DeleteAllLogs", "Log")',
                            success: function (response) {
                                const result = jQuery.parseJSON(response);
                                if (result.ResultStatus === 0) {
                                    Swal.fire({
                                        title: 'Silindi!',
                                        text: 'Tüm log kayıtları başarıyla silindi.',
                                        icon: 'success',
                                        confirmButtonText: 'Tamam',
                                        customClass: {
                                            confirmButton: 'btn btn-success'
                                        },
                                        buttonsStyling: false
                                    }).then(() => {
                                        window.location.href = '@Url.Action("Index", "Log")';
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Hata Oluştu!',
                                        text: result.Message,
                                        confirmButtonText: 'Tamam',
                                        customClass: {
                                            confirmButton: 'btn btn-danger'
                                        },
                                        buttonsStyling: false
                                    });
                                }
                            },
                            error: function (err) {
                                console.log(err);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Hata Oluştu!',
                                    text: 'Beklenmeyen bir hata oluştu.',
                                    confirmButtonText: 'Tamam',
                                    customClass: {
                                        confirmButton: 'btn btn-danger'
                                    },
                                    buttonsStyling: false
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
}