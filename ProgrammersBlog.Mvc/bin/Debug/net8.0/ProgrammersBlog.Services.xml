<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProgrammersBlog.Services</name>
    </assembly>
    <members>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.GetAsync(System.Guid)">
            <summary>
            Belirtilen ID'ye sahip makaleyi getirir.
            </summary>
            <param name="articleId">Makale ID</param>
            <returns>İçinde makale nesnesi bulunan işlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.GetAllAsync">
            <summary>
            Tüm makaleleri getirir.
            </summary>
            <returns>Makale listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.GetAllByMenuAsync(System.Guid)">
            <summary>
            Belirli bir menüye ait tüm makaleleri getirir.
            </summary>
            <returns>Menüye ait makalelerin listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.GetAllByNonDeletedAsync">
            <summary>
            Silinmemiş tüm makaleleri getirir. (IsDeleted = false)
            </summary>
            <returns>Silinmemiş makalelerin listesini içeren sonuç.</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.GetAllByNonDeletedAndActiveAsync">
            <summary>
            Silinmemiş ve aktif olan tüm makaleleri getirir.
            </summary>
            <returns>Aktif ve silinmemiş makalelerin listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.AddAsync(ProgrammersBlog.Entities.Dtos.Articles.ArticleAddDto,System.String,System.Guid)">
            <summary>
            Yeni bir makale ekler.
            </summary>
            <param name="articleAddDto">Makaleyi eklemek için kullanılan DTO</param>
            <param name="createdByName">Makaleyi oluşturan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.UpdateAsync(ProgrammersBlog.Entities.Dtos.Articles.ArticleUpdateDto,System.String)">
            <summary>
            Mevcut bir makaleyi günceller.
            </summary>
            <param name="articleUpdateDto">Makaleyi güncellemek için kullanılan DTO</param>
            <param name="modifiedByName">Makaleyi güncelleyen kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.DeleteAsync(System.Guid,System.String)">
            <summary>
            Makaleyi yumuşak silme (soft delete) işlemi yapar.
            (IsDeleted = true olarak işaretlenir.)
            </summary>
            <param name="articleId">Makale ID</param>
            <param name="modifiedByName">Silme işlemini yapan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IArticleService.HardDeleteAsync(System.Guid)">
            <summary>
            Makaleyi tamamen siler. (Hard delete)
            Veritabanından tamamen kaldırılır.
            </summary>
            <param name="articleId">Makale ID</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="T:ProgrammersBlog.Services.Abstract.ICategoryService">
            <summary>
            Kategori işlemlerini yöneten servis arayüzü.
            </summary>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.GetAsync(System.Guid)">
            <summary>
            Belirtilen ID'ye sahip kategoriyi getirir.
            </summary>
            <param name="categoryId">Kategori ID</param>
            <returns>İçinde kategori nesnesi bulunan işlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.GetAllAsync">
            <summary>
            Tüm kategorileri getirir.
            </summary>
            <returns>Kategori listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.GetAllByNonDeletedAsync">
            <summary>
            Silinmemiş tüm kategorileri getirir. (IsDeleted = false)
            </summary>
            <returns>Silinmemiş kategorilerin listesini içeren sonuç.</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.GetAllByNonDeletedAndActiveAsync">
            <summary>
            Hem silinmemiş hemde aktif
            </summary>
            <returns>Silinmemiş ve Aktif kategorilerin listesini içeren sonuç.</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.AddAsync(ProgrammersBlog.Entities.Dtos.Categories.CategoryAddDto,System.String)">
            <summary>
            Yeni bir kategori ekler.
            </summary>
            <param name="categoryAddDto">Kategori ekleme DTO'su</param>
            <param name="createdByName">Oluşturan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.UpdateAsync(ProgrammersBlog.Entities.Dtos.Categories.CategoryUpdateDto,System.String)">
            <summary>
            Mevcut bir kategoriyi günceller.
            </summary>
            <param name="categoryUpdateDto">Kategori güncelleme DTO'su</param>
            <param name="modifiedByName">Güncelleyen kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.DeleteAsync(System.Guid,System.String)">
            <summary>
            Kategoriyi yumuşak silme (soft delete) işlemi yapar.
            (IsDeleted = true olarak işaretlenir.)
            </summary>
            <param name="categoryId">Kategori ID</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.ICategoryService.HardDeleteAsync(System.Guid)">
            <summary>
            Kategoriyi tamamen siler. (Hard delete)
            Veritabanından tamamen kaldırılır.
            </summary>
            <param name="categoryId">Kategori ID</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="T:ProgrammersBlog.Services.Abstract.IMenuService">
            <summary>
            Menü işlemlerini yöneten servis arayüzü.
            </summary>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.GetAsync(System.Guid)">
            <summary>
            Belirtilen ID'ye sahip menüyü getirir.
            </summary>
            <param name="menuId">Menü ID</param>
            <returns>İçinde menü nesnesi bulunan işlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.GetAllAsync">
            <summary>
            Tüm menüleri getirir.
            </summary>
            <returns>Menü listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.GetAllByNonDeletedAsync">
            <summary>
            Silinmemiş tüm menüleri getirir. (IsDeleted = false)
            </summary>
            <returns>Silinmemiş menülerin listesini içeren sonuç.</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.GetAllByNonDeletedAndActiveAsync">
            <summary>
            Hem silinmemiş hemde aktif
            </summary>
            <returns>Silinmemiş ve Aktif menülerin listesini içeren sonuç.</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.GetAllByParentIdAsync(System.Guid)">
            <summary>
            Üst menüye göre alt menüleri getirir
            </summary>
            <param name="parentId">Üst menü ID</param>
            <returns>Alt menülerin listesini içeren sonuç</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.GetAllMainMenusAsync">
            <summary>
            Ana menüleri getirir (ParentId = null)
            </summary>
            <returns>Ana menülerin listesini içeren sonuç</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.AddAsync(ProgrammersBlog.Entities.Dtos.Menus.MenuAddDto,System.String)">
            <summary>
            Yeni bir menü ekler.
            </summary>
            <param name="menuAddDto">Menü ekleme DTO'su</param>
            <param name="createdByName">Oluşturan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.UpdateAsync(ProgrammersBlog.Entities.Dtos.Menus.MenuUpdateDto,System.String)">
            <summary>
            Mevcut bir menüyü günceller.
            </summary>
            <param name="menuUpdateDto">Menü güncelleme DTO'su</param>
            <param name="modifiedByName">Güncelleyen kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.DeleteAsync(System.Guid,System.String)">
            <summary>
            Menüyü yumuşak silme (soft delete) işlemi yapar.
            (IsDeleted = true olarak işaretlenir.)
            </summary>
            <param name="menuId">Menü ID</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Abstract.IMenuService.HardDeleteAsync(System.Guid)">
            <summary>
            Menüyü tamamen siler. (Hard delete)
            Veritabanından tamamen kaldırılır.
            </summary>
            <param name="menuId">Menü ID</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.#ctor(ProgrammersBlog.Data.Abstract.IUnitOfWork,AutoMapper.IMapper)">
            <summary>
            CategoryManager sınıfının yapıcı metodu, bağımlılıkları enjekte eder.
            </summary>
            <param name="unitOfWork">Unit of Work nesnesi</param>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.AddAsync(ProgrammersBlog.Entities.Dtos.Categories.CategoryAddDto,System.String)">
            <summary>
            Yeni bir kategori ekler.
            </summary>
            <param name="categoryAddDto">Kategori bilgilerini içeren DTO</param>
            <param name="createdByName">Oluşturan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.DeleteAsync(System.Guid,System.String)">
            <summary>
            Bir kategoriyi siler (Soft Delete - IsDeleted=true yapar).
            </summary>
            <param name="categoryId">Silinecek kategori ID'si</param>
            <param name="modifiedByName">Silme işlemini yapan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.GetAsync(System.Guid)">
            <summary>
            Belirtilen ID'ye sahip bir kategoriyi getirir.
            </summary>
            <param name="categoryId">Kategori ID'si</param>
            <returns>Kategori bilgisi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.GetAllAsync">
            <summary>
            Tüm kategorileri getirir.
            </summary>
            <returns>Kategori listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.GetAllByNonDeletedAsync">
            <summary>
            Silinmemiş (IsDeleted=false) tüm kategorileri getirir.
            </summary>
            <returns>Silinmemiş kategorilerin listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.HardDeleteAsync(System.Guid)">
            <summary>
            Bir kategoriyi kalıcı olarak veritabanından siler (Hard Delete).
            </summary>
            <param name="categoryId">Silinecek kategori ID'si</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.CategoryManager.UpdateAsync(ProgrammersBlog.Entities.Dtos.Categories.CategoryUpdateDto,System.String)">
            <summary>
            Bir kategoriyi günceller.
            </summary>
            <param name="categoryUpdateDto">Güncellenecek kategori bilgilerini içeren DTO</param>
            <param name="modifiedByName">Güncelleyen kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.#ctor(ProgrammersBlog.Data.Abstract.IUnitOfWork,AutoMapper.IMapper)">
            <summary>
            MenuManager sınıfının yapıcı metodu, bağımlılıkları enjekte eder.
            </summary>
            <param name="unitOfWork">Unit of Work nesnesi</param>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.AddAsync(ProgrammersBlog.Entities.Dtos.Menus.MenuAddDto,System.String)">
            <summary>
            Yeni bir menü ekler.
            </summary>
            <param name="menuAddDto">Menü bilgilerini içeren DTO</param>
            <param name="createdByName">Oluşturan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.DeleteAsync(System.Guid,System.String)">
            <summary>
            Bir menüyü siler (Soft Delete - IsDeleted=true yapar).
            </summary>
            <param name="menuId">Silinecek menü ID'si</param>
            <param name="modifiedByName">Silme işlemini yapan kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.GetAsync(System.Guid)">
            <summary>
            Belirtilen ID'ye sahip bir menüyü getirir.
            </summary>
            <param name="menuId">Menü ID'si</param>
            <returns>Menü bilgisi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.GetAllAsync">
            <summary>
            Tüm menüleri getirir.
            </summary>
            <returns>Menü listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.GetAllByNonDeletedAsync">
            <summary>
            Silinmemiş (IsDeleted=false) tüm menüleri getirir.
            </summary>
            <returns>Silinmemiş menülerin listesi</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.GetAllByParentIdAsync(System.Guid)">
            <summary>
            Üst menüye göre alt menüleri getirir
            </summary>
            <param name="parentId">Üst menü ID</param>
            <returns>Alt menülerin listesini içeren sonuç</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.GetAllMainMenusAsync">
            <summary>
            Ana menüleri getirir (ParentId = null)
            </summary>
            <returns>Ana menülerin listesini içeren sonuç</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.HardDeleteAsync(System.Guid)">
            <summary>
            Bir menüyü kalıcı olarak veritabanından siler (Hard Delete).
            </summary>
            <param name="menuId">Silinecek menü ID'si</param>
            <returns>İşlem sonucu</returns>
        </member>
        <member name="M:ProgrammersBlog.Services.Concrete.MenuManager.UpdateAsync(ProgrammersBlog.Entities.Dtos.Menus.MenuUpdateDto,System.String)">
            <summary>
            Bir menüyü günceller.
            </summary>
            <param name="menuUpdateDto">Güncellenecek menü bilgilerini içeren DTO</param>
            <param name="modifiedByName">Güncelleyen kişinin adı</param>
            <returns>İşlem sonucu</returns>
        </member>
    </members>
</doc>
